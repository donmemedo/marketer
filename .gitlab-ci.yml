variables:
    IMAGE_NAME: marketer-api
    IMAGE_TAG: $CI_PIPELINE_ID
    SMS_MESSAGE_Deploy_Pro: "marketer-api-->Deployed->Production"
    REGISTRY_HOST: $DOCKER_PRIVATE_REGISTRY_IP:$DOCKER_PRIVATE_REGISTRY_PORT
    NAMESPACE_Dev: dev-marketer
    NAMESPACE_Stg: stg-marketer
    NAMESPACE_Pro: pro-marketer

stages:
  # - Code Quality
  - Build
  - Deploy
  - Notifications


build:
    stage: Build
    image: $REGISTRY_HOST/repository/tech1a-docker-registry/docker:20.10.17
    services:
    - name: $REGISTRY_HOST/repository/tech1a-docker-registry/docker:20.10.17-dind
      alias: docker
      entrypoint: [ "sh", "-c", "dockerd-entrypoint.sh $DOCKER_DAEMON_OPTIONS" ]
    variables:
      DOCKER_DAEMON_OPTIONS: "--insecure-registry=$REGISTRY_HOST"

    script:
        - docker login -u "$DOCKER_PRIVATE_REGISTRY_USER" -p "$DOCKER_PRIVATE_REGISTRY_PASSWORD" "http://$REGISTRY_HOST"
        - docker build  --build-arg  DOCKER_PRIVATE_REGISTRY_PASSWORD=$DOCKER_PRIVATE_REGISTRY_PASSWORD -t $REGISTRY_HOST/repository/tech1a-docker-registry/$IMAGE_NAME:$IMAGE_TAG .
        - docker push $REGISTRY_HOST/repository/tech1a-docker-registry/$IMAGE_NAME:$IMAGE_TAG
        - docker tag $REGISTRY_HOST/repository/tech1a-docker-registry/$IMAGE_NAME:$IMAGE_TAG $REGISTRY_HOST/repository/tech1a-docker-registry/$IMAGE_NAME:latest
        - docker push $REGISTRY_HOST/repository/tech1a-docker-registry/$IMAGE_NAME:latest

dev:
  stage: Deploy
  image: $REGISTRY_HOST/repository/tech1a-docker-registry/dtzar/helm-kubectl:3.0.3
  script:
    - mkdir -p ~/.kube
    - chmod 700 ~/.kube
    - echo "$K8S_STG" | base64 -d > ~/.kube/config
    - kubectl -n "$NAMESPACE_Dev" apply -f deployment/dev/dev.yaml
    - kubectl set image -n "$NAMESPACE_Dev" deployment/$IMAGE_NAME $IMAGE_NAME=$REGISTRY_HOST/repository/tech1a-docker-registry/$IMAGE_NAME:$IMAGE_TAG
  needs:
    - job: build
  retry: 2
  only:
    - dev
deploy-dev-SMS:
  stage: Notifications
  image: $REGISTRY_HOST/repository/tech1a-docker-registry/curlimages/curl
  script:
    - curl -X POST "https://my.candoosms.com/services/URLService/URN/?username=$SMS_PROVIDER_USER&password=$SMS_PROVIDER_PASSWORD&command=send&src=$SMS_SEND_SRC&destinations=$SMSGroup&body=$SMS_MESSAGE_Deploy_Pro&flash=0"
  needs:
    - job: deploy-dev

stage:
  stage: Deploy
  image: $REGISTRY_HOST/repository/tech1a-docker-registry/dtzar/helm-kubectl:3.0.3
  script:
    - mkdir -p ~/.kube
    - chmod 700 ~/.kube
    - echo "$K8S_STG" | base64 -d > ~/.kube/config
    - kubectl -n "$NAMESPACE_Stg" apply -f deployment/stage/stage.yaml
    - kubectl set image -n "$NAMESPACE_Stg" deployment/$IMAGE_NAME $IMAGE_NAME=$REGISTRY_HOST/repository/tech1a-docker-registry/$IMAGE_NAME:$IMAGE_TAG
  needs:
    - job: build
  retry: 2
  only:
    - main
  when: manual

deploy-stage-SMS:
  stage: Notifications
  image: $REGISTRY_HOST/repository/tech1a-docker-registry/curlimages/curl
  script:
    - curl -X POST "https://my.candoosms.com/services/URLService/URN/?username=$SMS_PROVIDER_USER&password=$SMS_PROVIDER_PASSWORD&command=send&src=$SMS_SEND_SRC&destinations=$SMSGroup&body=$SMS_MESSAGE_Deploy_Pro&flash=0"
  needs:
    - job: deploy-stage

deploy-pro:
  stage: Deploy Production
  image: $REGISTRY_HOST/repository/tech1a-docker-registry/dtzar/helm-kubectl:3.0.3
  script:
    - mkdir -p ~/.kube
    - chmod 700 ~/.kube
    - echo "$K8S_STG" | base64 -d > ~/.kube/config
    - kubectl -n "$NAMESPACE_Pro" apply -f deployment/pro/pro.yaml
    - kubectl set image -n "$NAMESPACE_Pro" deployment/$IMAGE_NAME $IMAGE_NAME=$REGISTRY_HOST/repository/tech1a-docker-registry/$IMAGE_NAME:$IMAGE_TAG
  needs:
    - job: build
  retry: 2
  only:
    - main
  when: manual

deploy-pro-SMS:
  stage: Notifications
  image: $REGISTRY_HOST/repository/tech1a-docker-registry/curlimages/curl
  script:
    - curl -X POST "https://my.candoosms.com/services/URLService/URN/?username=$SMS_PROVIDER_USER&password=$SMS_PROVIDER_PASSWORD&command=send&src=$SMS_SEND_SRC&destinations=$SMSGroup&body=$SMS_MESSAGE_Deploy_Pro&flash=0"
  needs:
    - job: deploy-pro
